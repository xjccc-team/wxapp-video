
<template>
 <view class="container">
  <canvas type="2d" id="myCanvas"></canvas>
  <button type="default" class="save-btn" plain @tap="saveImage">保存图片</button>
</view>
</template>

<script>
  import wepy from 'wepy'
  import testMixin from '../mixins/test'

  export default class Share extends wepy.page {
    config = {
      navigationBarTitleText: '分享'
    }
    components = {
    }
    mixins = [testMixin]
    data = {
      windowW: 375,
      windowH: 400,
      canvasImg: ''
    }
    computed = {
      now () {
        return +new Date()
      }
    }

    methods = {
    }
    events = {
      'index-emit': (...args) => {
        console.log(args)
      }
    }
    onReady() {
      const query = wx.createSelectorQuery()
      query.select('#myCanvas')
          .fields({ node: true, size: true })
          .exec(async (res) => {
            wx.showLoading({
              title: '加载中'
            })
            const canvas = this.canvas = res[0].node
            const ctx = canvas.getContext('2d')
            const dpr = wx.getSystemInfoSync().pixelRatio
            canvas.width = res[0].width * dpr
            canvas.height = res[0].height * dpr
            ctx.scale(dpr, dpr)
            await this.drawFun(canvas, ctx)
            let that = this
            setTimeout(function() {
              that.daochu(canvas)
              wx.hideLoading()
            }, 200)
          })
    }
    daochu(canvas) {
      wx.canvasToTempFilePath({
        canvas: canvas,
        success: (res) => {
          this.canvasImg = res.tempFilePath
          this.$apply()
        },
        fail: function(res) {
          console.log(res)
        }
      })
    }
    saveImage() {
      wepy.showLoading({
        title: '保存中...',
        mask: true
      })
      let imgs = this.canvasImg
      wx.saveImageToPhotosAlbum({
        filePath: imgs,
        success: (res) => {
          wepy.showToast({
            title: '保存成功',
            icon: 'success',
            duration: 2000
          })
          this.$apply()
        },
        fail: (res) => {
          this.noscroll = ''
          this.$apply()
          wepy.showToast({
            title: '保存失败请重试',
            icon: 'success',
            duration: 2000
          })
        }
      })
    }
    downloadImage(canvas, url) {
      return new Promise((resolve, reject) => {
        wx.downloadFile({
          url: url,
          success: (res) => {
            let img = canvas.createImage()
            img.onload = () => {
              return resolve(img)
            }
            img.src = res.tempFilePath
          },
          fail: (err) => {
            return reject(err)
          }
        })
      })
    }
    async drawFun(canvas, ctx) {
      await this.downloadImage(canvas, 'https://www.wingstechnology.cn/mpimage/share-bg.png').then(img => {
        this.drawRoundRectAvatar(ctx, 0, 0, this.windowW, 583, 1, img)
      })
      await this.downloadImage(canvas, 'https://www.wingstechnology.cn/mpimage/share-text.png').then(img => {
        this.drawRoundRectAvatar(ctx, 21, 278, 257, 102, 1, img)
      })
      await this.downloadImage(canvas, 'https://www.wingstechnology.cn/mpimage/share-img.png').then(img => {
        this.drawRoundRectAvatar(ctx, 109, 395, 99, 151, 1, img)
      })
      // await this.downloadImage(canvas, this.userinfo.avatarUrl).then(img => {
      //   this.drawRoundRectAvatar(ctx, this.windowW / 2 - 60, 250, 100, 100, 50, img)
      // })
      // await this.downloadImage(canvas, 'https://www.wingstechnology.cn/mpimage/code.png').then(img => {
      //   this.drawRoundRectAvatar(ctx, this.windowW / 2 - 51, 459, 103, 103, 1, img)
      // })
      // await this.downloadImage(canvas, 'https://www.wingstechnology.cn/mpimage/logo.png').then(img => {
      //   this.drawRoundRectAvatar(ctx, this.windowW / 2 - 61, 600, 123, 46, 1, img)
      // })
    }
    // 绘制背景图
    drawRoundRectAvatar(ctx, x, y, w, h, r, imgPath, color) {
      ctx.save()
      this.drawRoundRect(ctx, x, y, w, h, r, color)
      ctx.clip()
      ctx.drawImage(imgPath, x, y, w, h)
      ctx.restore()
    }
     // 圆角
    drawRoundRect(ctx, x, y, w, h, r, color) {
      ctx.beginPath()
      // 左上角
      ctx.arc(x + r, y + r, r, Math.PI, Math.PI * 1.5)
      // 右上角
      ctx.arc(x + w - r, y + r, r, Math.PI * 1.5, Math.PI * 2)
      // 右下角
      ctx.arc(x + w - r, y + h - r, r, 0, Math.PI * 0.5)
      // 左下角
      ctx.arc(x + r, y + h - r, r, Math.PI * 0.5, Math.PI)
      ctx.closePath()
      ctx.fillStyle = color || 'transparent'
      ctx.fill()
    }
    onLoad () {
      this.windowW = wepy.getSystemInfoSync().windowWidth - 40
      this.windowH = wepy.getSystemInfoSync().windowHeight
      this.setData({
        windowH: wepy.getSystemInfoSync().windowHeight
      })
      this.userinfo = wepy.getStorageSync('userinfo')
      this.$apply()
    }
  }
</script>
<style lang="less">
.container{
  text-align: center;
  position: relative;
  box-sizing: border-box;
  overflow-y: scroll;
  background:rgba(250,250,250,1);
  canvas{
   width: 592rpx;
   height:583px;
   background: #fff;
   border-radius: 10rpx;
  }
  .save-btn{
    border:none !important;
    color:#fff !important;
    margin: 68rpx auto 0;
    width:328rpx;
    height:88rpx;
    background:linear-gradient(90deg,rgba(254,105,124,1) 0%,rgba(199,0,25,1) 100%);
    box-shadow:0px 20rpx 30rpx rgba(255,0,0,0.16);
    border-radius:60rpx;
  }
}
</style>
